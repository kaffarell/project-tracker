{"version":3,"sources":["components/ProjectElement.js","model/project.js","components/ProjectList.js","App.js","index.js"],"names":["ProjectElement","props","handleShow","setState","showModal","handleClose","handleDelete","p","title","fetch","method","headers","body","JSON","stringify","update","state","className","Card","Body","style","paddingLeft","Title","this","Subtitle","members","Text","description","Button","onClick","variant","Modal","show","onHide","Header","closeButton","Footer","React","Component","Project","ProjectList","projects","jsxElements","elements","i","length","push","getProjects","processedArray","console","log","window","location","href","then","response","json","data","renderList","catch","error","App","handleCancel","inputText","inputDescription","inputMembers","handleSave","inputTitle","updateTitleInput","evt","target","value","updateDescriptionInput","updateMembersInput","onChange","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4154fccb.chunk.js","sourcesContent":["import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport './ProjectElement.css';\nimport Modal from 'react-bootstrap/Modal';\n\nclass ProjectElement extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showModal: false,\n        }\n    }\n\n    handleShow = () => {\n        this.setState({showModal: true});\n    }\n    handleClose = () => {\n        this.setState({showModal: false});\n    }\n\n    handleDelete = () => {\n        let p = {\n            title: this.props.title,\n        }\n        fetch('http://localhost:3000/deleteproject', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(p),\n        });\n        this.props.update();\n        this.setState({showModal: false});\n    }\n\n    render() {\n        return (\n            <div className=\"element\">\n                <Card>\n                    <Card.Body style={{paddingLeft: '30px'}}>\n                        <Card.Title className=\"d-flex justify-content-start\">{this.props.title}</Card.Title>\n                        <Card.Subtitle className=\"d-flex justify-content-start mb-2 text-muted\">{this.props.members}</Card.Subtitle>\n\n                        <Card.Text className=\"d-flex  justify-content-start\">\n                            {this.props.description}\n                        </Card.Text>\n                        <Button onClick={this.handleShow} className=\"d-flex  justify-content-start\" variant=\"primary\">Info</Button>\n                    </Card.Body>\n                </Card>\n                <Modal show={this.state.showModal} onHide={this.handleClose}>\n                    <Modal.Header closeButton>\n                    <Modal.Title>\n                        Title: {this.props.title}\n                    </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        Members: {this.props.members}\n                    </Modal.Body>\n                    <Modal.Body>\n                        Description: {this.props.description}\n                    </Modal.Body>\n                    <Modal.Footer>\n                    <Button variant=\"danger\" onClick={this.handleDelete}>\n                        Delete\n                    </Button>\n                    <Button variant=\"primary\" onClick={this.handleClose}>\n                        Close\n                    </Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        )    \n    }\n}\n\nexport default ProjectElement;","class Project {\n    title = '';\n    description = '';\n    members = '';\n\n    constructor(title, description, members) {\n        this.title = title;\n        this.description = description;\n        this.members = members;\n    }\n}\n\nexport default Project;","import ProjectElement from './ProjectElement';\nimport React from 'react';\nimport Project from '../model/project';\nimport './ProjectList.css'\n\nclass ProjectList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            projects: []\n        }\n    }\n\n    renderList() {\n        let jsxElements = [];\n        let elements = this.state.projects;\n        for (let i = 0; i < elements.length; i++) {\n            jsxElements.push(\n                <ProjectElement title={elements[i].title} \n                description={elements[i].description} \n                members={elements[i].members}\n                update={this.getProjects}>\n                </ProjectElement>\n            )\n        }\n        return jsxElements;\n    }\n\n    getProjects() {\n        let processedArray = [];\n        console.log(window.location.href);\n        fetch(window.location.href + 'getprojects')\n            .then(response => response.json())\n            .then((data) => {\n                for(let i = 0; i < data.length; i++) {\n                    let p = new Project(data[i].title, data[i].description, data[i].members);\n                    processedArray.push(p);\n                }\n                this.setState({projects: processedArray});\n                this.renderList();\n            })\n            .catch((error) => console.log(error)); \n        \n    }\n\n    componentDidMount() {\n        this.getProjects();\n    }\n\n    componentDidUpdate() {\n        this.getProjects();\n    }\n\n    render() {\n        return (\n            <div className=\"projectlist\">\n                <h2>Aktive Interessensgruppen / Projekte</h2>\n                {this.renderList()}\n            </div>\n        )\n    }\n}\n\nexport default ProjectList;","import './App.css';\nimport React from 'react';\nimport ProjectList from './components/ProjectList';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showModal: false,\n            inputTitle: \"\",\n            inputDescription: \"\",\n            inputMembers: \"\"\n        };\n    }\n\n    handleCancel = () => {\n        this.setState({showModal: false});\n        this.setState({\n            inputText: \"\",\n            inputDescription: \"\",\n            inputMembers: \"\",\n        });\n    }\n\n    handleSave = () => {\n        let p = {\n            title: this.state.inputTitle,\n            description: this.state.inputDescription,\n            members: this.state.inputMembers,\n        }\n        fetch('http://localhost:3000/newproject', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(p),\n        });\n\n        this.setState({showModal: false});\n        this.setState({\n            inputText: \"\",\n            inputDescription: \"\",\n            inputMembers: \"\",\n        });\n    }\n\n    handleShow = () => {\n        this.setState({showModal: true});\n    }\n\n    updateTitleInput = (evt) => {\n        this.setState({\n            inputTitle: evt.target.value,\n        })\n    }\n\n    updateDescriptionInput = (evt) => {\n        this.setState({\n            inputDescription: evt.target.value,\n        })\n    }\n\n    updateMembersInput = (evt) => {\n        this.setState({\n            inputMembers: evt.target.value,\n        })\n    }\n\n\n    render() {\n\n        return (\n            <div className=\"App\">\n                <div className=\"list\">\n                    <ProjectList></ProjectList>\n                </div>\n                <div className=\"control\">\n                    <Button onClick={this.handleShow}>Neues Projekt</Button>\n\n                    <Modal show={this.state.showModal} onHide={this.handleClose}>\n                        <Modal.Header closeButton>\n                        <Modal.Title>\n                            Title: <input value={this.state.inputTitle} \n                            onChange={(evt) => this.updateTitleInput(evt)}></input>\n                        </Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            Members: <input value={this.state.inputMembers}\n                            onChange={(evt) => this.updateMembersInput(evt)}></input>\n                        </Modal.Body>\n                        <Modal.Body>\n                            Description: <input value={this.state.inputDescription} \n                            onChange={(evt) => this.updateDescriptionInput(evt)}></input>\n                        </Modal.Body>\n                        <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.handleCancel}>\n                            Close\n                        </Button>\n                        <Button variant=\"primary\" onClick={this.handleSave}>\n                            Save Changes\n                        </Button>\n                        </Modal.Footer>\n                    </Modal>\n                </div>\n            </div>\n        );\n    }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}